{"ast":null,"code":"var _jsxFileName = \"/home/aoshisen/Study/cnode/cnode-hooks/src/view/index/index.js\";\nimport React, { useEffect } from \"react\";\nimport IndexNav from \"./indexNav\";\nimport TopicsList from \"../../component/topicsList\";\nimport { useSelector } from \"react-redux\";\nimport { useTopicList } from \"../../store/action\";\nimport qs from \"qs\";\nimport { useLocation } from \"react-router-dom\";\nimport IndexPagination from \"./indexPagination\";\n\nfunction IndexPage() {\n  // 拿到数据\n  let {\n    data,\n    loading\n  } = useSelector(state => state.topics);\n  let getData = useTopicList();\n  let {\n    search\n  } = useLocation(); // console.log(search)\n\n  let {\n    tab = \"all\",\n    page = 1\n  } = qs.parse(search.substr(1));\n  console.log(tab, page);\n  useEffect(() => {\n    //这个函数·是在store仓库里面的，这这个函数会改变data,loading的值\n    getData(tab, page); //第二个参数是这个改变的依赖项如果不写的话会出现递归调用的情况\n  }, [tab, page]); // console.log(data)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IndexNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopicsList, {\n    data: data,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IndexPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/aoshisen/Study/cnode/cnode-hooks/src/view/index/index.js"],"names":["React","useEffect","IndexNav","TopicsList","useSelector","useTopicList","qs","useLocation","IndexPagination","IndexPage","data","loading","state","topics","getData","search","tab","page","parse","substr","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,SAASC,SAAT,GAAoB;AAChB;AACA,MAAI;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAeP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,MAAd,CAA9B;AACA,MAAIC,OAAO,GAACT,YAAY,EAAxB;AACA,MAAI;AAACU,IAAAA;AAAD,MAAWR,WAAW,EAA1B,CAJgB,CAKhB;;AACA,MAAI;AAACS,IAAAA,GAAG,GAAC,KAAL;AAAWC,IAAAA,IAAI,GAAC;AAAhB,MAAmBX,EAAE,CAACY,KAAH,CAASH,MAAM,CAACI,MAAP,CAAc,CAAd,CAAT,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAgBC,IAAhB;AACAhB,EAAAA,SAAS,CAAC,MAAI;AAClB;AACQa,IAAAA,OAAO,CAACE,GAAD,EAAKC,IAAL,CAAP,CAFU,CAGlB;AACK,GAJQ,EAIP,CAACD,GAAD,EAAKC,IAAL,CAJO,CAAT,CARgB,CAahB;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AACD,eAAeF,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport IndexNav from \"./indexNav\"\nimport TopicsList from \"../../component/topicsList\";\nimport { useSelector} from \"react-redux\";\nimport { useTopicList } from \"../../store/action\";\nimport qs from \"qs\"\nimport { useLocation } from \"react-router-dom\";\nimport IndexPagination from \"./indexPagination\";\nfunction IndexPage(){\n    // 拿到数据\n    let {data,loading}=useSelector(state=>state.topics);\n    let getData=useTopicList();\n    let {search}  =useLocation();\n    // console.log(search)\n    let {tab=\"all\",page=1}=qs.parse(search.substr(1));\n    console.log(tab,page)\n    useEffect(()=>{\n//这个函数·是在store仓库里面的，这这个函数会改变data,loading的值\n        getData(tab,page)\n//第二个参数是这个改变的依赖项如果不写的话会出现递归调用的情况\n    },[tab,page])\n    // console.log(data)\n    return (\n        <div>\n            <IndexNav />\n            <TopicsList data={data} loading={loading}/>\n            <IndexPagination />\n        </div>\n    )\n}\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}